<?xml version="1.0" encoding="utf-8"?>
<topic id="854cb5b5-eaa9-46ff-a676-041f84fd36fe" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<para>
        RogueSharp is a free library written in C# to help roguelike developers get a head start on their game. RogueSharp provides many utility functions for dealing with map generation, field-of-view calculations, path finding, random number generation and more.

        It is loosely based on the popular libtcod (http://doryen.eptalys.net/libtcod/) or "Doryen Library" though not all features overlap.
      </para>
		</introduction>

    <section>
			<title>Getting Started</title>
			<content>
        
				<para>
          Most interactions with RogueSharp is based around the concept of a `Map` which is a rectangular grid of `Cells`.

          Each `Cell` in a `Map` has the following properties:
        </para>

				<list class="bullet">
					<listItem>
						<para>`IsTransparent`: true if visibility extends through the `Cell`.</para>
					</listItem>

					<listItem>
						<para>`IsWalkable`: true if a the `Cell` may be traversed by the player</para>
					</listItem>

          <listItem>
            <para>`IsExplored`: true if the player has ever had line-of-sight to the `Cell`</para>
          </listItem>

          <listItem>
            <para>`IsInFov`: true if the `Cell` is currently in the player's field-of-view</para>
          </listItem>
				</list>

        <para>
          To instantiate a new `Map` you can use its constructor which takes a width and height and will create a new map of those dimensions with the properties of all `Cells` set to false.
        </para>

        <para>
          IMap boringMapOfSolidStone = new Map( 5, 3 );
          Console.WriteLine( boringMapOfSolidStone.ToString() );
        </para>

        <para>
          A more interesting way to create a map is to use the `Map` class's static method `Create` which takes an `IMapCreationStrategy`. Some simple classes implementing `IMapCreationStrategy` are provided with RogueSharp but this is easily extended by creating your own class that implements the strategy.
        </para>
      </content>
		</section>
	</developerConceptualDocument>
</topic>
